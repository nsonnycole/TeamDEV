<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projet extends \AppBundle\Entity\Projet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['url' => NULL, 'pictureName' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->url, $this->pictureName);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nomProjet', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'contenu', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'dateDebut', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'dateFin', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'duree', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nbPlaces', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nbParticipants', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'statut', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'idUtilisateur', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'idTypeProjet', 'url', 'pictureName', 'file'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nomProjet', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'contenu', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'dateDebut', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'dateFin', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'duree', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nbPlaces', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'nbParticipants', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'statut', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'idUtilisateur', '' . "\0" . 'AppBundle\\Entity\\Projet' . "\0" . 'idTypeProjet', 'file'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->url, $this->pictureName);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', []);

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function uploadProfilePicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'uploadProfilePicture', []);

        return parent::uploadProfilePicture();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomProjet($nomProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomProjet', [$nomProjet]);

        return parent::setNomProjet($nomProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomProjet', []);

        return parent::getNomProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut($dateDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin($dateFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', [$duree]);

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', []);

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbPlaces($nbPlaces)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbPlaces', [$nbPlaces]);

        return parent::setNbPlaces($nbPlaces);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbPlaces()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbPlaces', []);

        return parent::getNbPlaces();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbParticipants($nbParticipants)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbParticipants', [$nbParticipants]);

        return parent::setNbParticipants($nbParticipants);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbParticipants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbParticipants', []);

        return parent::getNbParticipants();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUtilisateur(\AppBundle\Entity\User $idUtilisateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUtilisateur', [$idUtilisateur]);

        return parent::setIdUtilisateur($idUtilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUtilisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUtilisateur', []);

        return parent::getIdUtilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdTypeProjet(\AppBundle\Entity\TypeProjet $idTypeProjet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdTypeProjet', [$idTypeProjet]);

        return parent::setIdTypeProjet($idTypeProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdTypeProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdTypeProjet', []);

        return parent::getIdTypeProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut($statut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenu($contenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenu', [$contenu]);

        return parent::setContenu($contenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenu', []);

        return parent::getContenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setPictureName($pictureName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPictureName', [$pictureName]);

        return parent::setPictureName($pictureName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPictureName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPictureName', []);

        return parent::getPictureName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

}
